/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   variables-consumer-mixin.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

export {VariablesConsumerMixin};

declare namespace ArcComponents {


  /**
   * A mixin to be used with elements that consumes variables and environments
   * state. Contains all methods and listeners to kee variables and environments
   * up to date.
   */
  function VariablesConsumerMixin<T extends new (...args: any[]) => {}>(base: T): T & VariablesConsumerMixinConstructor;

  interface VariablesConsumerMixinConstructor {
    new(...args: any[]): VariablesConsumerMixin;
  }

  interface VariablesConsumerMixin {

    /**
     * Currently activated environment.
     */
    environment: string|null|undefined;

    /**
     * List of all available environments.
     */
    environments: Array<object|null>|null;

    /**
     * List of available variables for the environment.
     */
    variables: Array<object|null>|null;
    readonly hasVariables: any;
    readonly hasEnvironments: any;

    /**
     * Computed value, true if variables are available for current
     * environment.
     */
    _hasVariables: boolean|null|undefined;

    /**
     * Computed value, true if there's a list of environments set.
     */
    _hasEnvironments: boolean|null|undefined;

    /**
     * When set variables are not set automatically when element
     * is attached to the DOM.
     */
    noAutoLoad: boolean|null|undefined;
    connectedCallback(): void;
    disconnectedCallback(): void;

    /**
     * Dispatches bubbling and composed custom event.
     * By default the event is cancelable until `cancelable` property is set to false.
     *
     * @param type Event type
     * @param detail A detail to set
     * @param cancelable When false the event is not cancelable.
     */
    _dispatch(type: String|null, detail: any|null, cancelable: Boolean|null): CustomEvent|null;

    /**
     * Handler for `data-imported` cutom event.
     * Refreshes environments list.
     */
    _dataImportHandler(): Promise<any>|null;

    /**
     * Handler for the `datastore-destroyed` custom event.
     *
     * @returns True if scheduled refresh flow.
     */
    _onDatabaseDestroy(e: CustomEvent|null): Boolean|null;

    /**
     * Asks variables manager for current environment and variables.
     *
     * Note, At the moment of initialization the manager may not be in the DOM.
     * In this case the initialization fails. However, when the manager is
     * initialized it dispatched events to update variables and environments.
     */
    _initializeVariables(): Promise<any>|null;

    /**
     * Refreshes list of variables and current environment.
     */
    refreshState(): void;

    /**
     * Refreshes list of environments.
     */
    refreshEnvironments(): Promise<any>|null;

    /**
     * Removes variables and updates environment.
     */
    _envChangedHandler(e: CustomEvent|null): void;

    /**
     * Handler for the `variables-list-changed` event.
     * Sets list of the variables.
     */
    _varListChangedHandler(e: CustomEvent|null): void;

    /**
     * Handler for `variable-updated` event. Updates variable in the list
     * if it is on it or adds it otherwise.
     */
    _varUpdateHandler(e: CustomEvent|null): void;

    /**
     * Handler for `variable-deleted` event. Removes variable from the list
     * if it is on it.
     */
    _varDeleteHandler(e: CustomEvent|null): void;

    /**
     * Finds variable index on the variables list.
     *
     * @param id PouchDB data id
     * @returns Variable index or -1.
     */
    _getVariableIndex(id: String|null): Number|null;

    /**
     * Handler for non-cancelable `environment-deleted` event.
     * Removes environment if it exists on the list.
     */
    _envDeleteHandler(e: CustomEvent|null): void;

    /**
     * Handler for non-cancelable `environment-updated` event.
     * Updates / adds environment to the list.
     */
    _envUpdateHandler(e: CustomEvent|null): void;
  }
}

export {VariablesConsumerMixinConstructor};
