{
  "schema_version": "1.0.0",
  "namespaces": [
    {
      "name": "ArcComponents",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "variables-consumer-mixin.html",
        "start": {
          "line": 22,
          "column": 2
        },
        "end": {
          "line": 22,
          "column": 28
        }
      },
      "mixins": [
        {
          "description": "A mixin to be used with elements that consumes variables and environments\nstate. Contains all methods and listeners to kee variables and environments\nup to date.",
          "summary": "",
          "path": "variables-consumer-mixin.html",
          "properties": [
            {
              "name": "environment",
              "type": "string | null | undefined",
              "description": "Currently activated environment.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 44,
                  "column": 8
                },
                "end": {
                  "line": 47,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "String"
                }
              }
            },
            {
              "name": "environments",
              "type": "Array.<Object>",
              "description": "List of all available environments.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 52,
                  "column": 8
                },
                "end": {
                  "line": 52,
                  "column": 49
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Array"
                }
              }
            },
            {
              "name": "variables",
              "type": "Array.<Object>",
              "description": "List of available variables for the environment.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 57,
                  "column": 8
                },
                "end": {
                  "line": 57,
                  "column": 46
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Array"
                }
              }
            },
            {
              "name": "hasVariables",
              "type": "boolean | null | undefined",
              "description": "Computed value, true if variables are available for current\nenvironment.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 62,
                  "column": 8
                },
                "end": {
                  "line": 67,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "readOnly": true,
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "hasEnvironments",
              "type": "boolean | null | undefined",
              "description": "Computed value, true if there's a list of environments set.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 71,
                  "column": 8
                },
                "end": {
                  "line": 76,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "readOnly": true,
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            }
          ],
          "methods": [
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 90,
                  "column": 4
                },
                "end": {
                  "line": 101,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "disconnectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 103,
                  "column": 4
                },
                "end": {
                  "line": 111,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_initializeVariables",
              "description": "Asks variables manager for current environment and variables.\n\nNote, At the moment of initialization the manager may not be in the DOM.\nIn this case the initialization fails. However, when the manager is\ninitialized it dispatched events to update variables and environments.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 119,
                  "column": 4
                },
                "end": {
                  "line": 124,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "refreshState",
              "description": "Refreshes list of variables and current environment.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 130,
                  "column": 4
                },
                "end": {
                  "line": 150,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "noThrows",
                  "type": "Boolean",
                  "description": "When set it does not throw error when model is\nnot found."
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "refreshEnvironments",
              "description": "Refreshes list of environments.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 155,
                  "column": 4
                },
                "end": {
                  "line": 182,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "Promise"
              }
            },
            {
              "name": "_computeHasVariables",
              "description": "Computes `hasVariables` property.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 189,
                  "column": 4
                },
                "end": {
                  "line": 191,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "variables",
                  "type": "?Array",
                  "description": "List of current variables."
                }
              ],
              "return": {
                "type": "Boolean",
                "desc": "True if list is not empty."
              }
            },
            {
              "name": "_computeHasEnvs",
              "description": "Computes `hasEnvironments` property.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 197,
                  "column": 4
                },
                "end": {
                  "line": 199,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "environments",
                  "type": "?Array",
                  "description": "List of current environments."
                }
              ],
              "return": {
                "type": "Boolean",
                "desc": "True if list is not empty."
              }
            },
            {
              "name": "_envChangedHandler",
              "description": "Removes variables and updates environment.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 204,
                  "column": 4
                },
                "end": {
                  "line": 208,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e",
                  "type": "CustomEvent"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_varListChangedHandler",
              "description": "Handler for the `variables-list-changed` event.\nSets list of the variables.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 215,
                  "column": 4
                },
                "end": {
                  "line": 225,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e",
                  "type": "CustomEvent"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_varUpdateHandler",
              "description": "Handler for `variable-updated` event. Updates variable in the list\nif it is on it or adds it otherwise.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 231,
                  "column": 4
                },
                "end": {
                  "line": 250,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e",
                  "type": "CustomEvent"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_varDeleteHandler",
              "description": "Handler for `variable-deleted` event. Removes variable from the list\nif it is on it.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 256,
                  "column": 4
                },
                "end": {
                  "line": 266,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e",
                  "type": "CustomEvent"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_getVariableIndex",
              "description": "Finds variable index on the variables list.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 272,
                  "column": 4
                },
                "end": {
                  "line": 278,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "id",
                  "type": "String",
                  "description": "PouchDB data id"
                }
              ],
              "return": {
                "type": "Number",
                "desc": "Variable index or -1."
              }
            },
            {
              "name": "_envDeleteHandler",
              "description": "Handler for non-cancelable `environment-deleted` event.\nRemoves environment if it exists on the list.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 284,
                  "column": 4
                },
                "end": {
                  "line": 297,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e",
                  "type": "CustomEvent"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_envUpdateHandler",
              "description": "Handler for non-cancelable `environment-updated` event.\nUpdates / adds environment to the list.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 303,
                  "column": 4
                },
                "end": {
                  "line": 320,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e",
                  "type": "CustomEvent"
                }
              ],
              "return": {
                "type": "void"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 0
            },
            "end": {
              "line": 323,
              "column": 2
            }
          },
          "privacy": "public",
          "name": "ArcComponents.VariablesConsumerMixin",
          "attributes": [
            {
              "name": "environment",
              "description": "Currently activated environment.",
              "sourceRange": {
                "start": {
                  "line": 44,
                  "column": 8
                },
                "end": {
                  "line": 47,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            },
            {
              "name": "environments",
              "description": "List of all available environments.",
              "sourceRange": {
                "start": {
                  "line": 52,
                  "column": 8
                },
                "end": {
                  "line": 52,
                  "column": 49
                }
              },
              "metadata": {},
              "type": "Array.<Object>"
            },
            {
              "name": "variables",
              "description": "List of available variables for the environment.",
              "sourceRange": {
                "start": {
                  "line": 57,
                  "column": 8
                },
                "end": {
                  "line": 57,
                  "column": 46
                }
              },
              "metadata": {},
              "type": "Array.<Object>"
            },
            {
              "name": "has-variables",
              "description": "Computed value, true if variables are available for current\nenvironment.",
              "sourceRange": {
                "start": {
                  "line": 62,
                  "column": 8
                },
                "end": {
                  "line": 67,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "has-environments",
              "description": "Computed value, true if there's a list of environments set.",
              "sourceRange": {
                "start": {
                  "line": 71,
                  "column": 8
                },
                "end": {
                  "line": 76,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        }
      ]
    }
  ]
}
